; ██╗     ███████╗███████╗████████╗
; ██║     ██╔════╝██╔════╝╚══██╔══╝
; ██║     █████╗  █████╗     ██║
; ██║     ██╔══╝  ██╔══╝     ██║
; ███████╗███████╗██║        ██║
; ╚══════╝╚══════╝╚═╝        ╚═╝

(defvar kb_es false)
(defwidget left[]
(box :class "left"
    :orientation "h"
    :halign "start"
    (button
        :class "kb-button"
        :tooltip "Something"
        :onclick "./scripts/kbchange.sh ${kb_es}"
        {kb_es ? "es" : "en"})))

;  ██████╗███████╗███╗   ██╗████████╗███████╗██████╗
; ██╔════╝██╔════╝████╗  ██║╚══██╔══╝██╔════╝██╔══██╗
; ██║     █████╗  ██╔██╗ ██║   ██║   █████╗  ██████╔╝
; ██║     ██╔══╝  ██║╚██╗██║   ██║   ██╔══╝  ██╔══██╗
; ╚██████╗███████╗██║ ╚████║   ██║   ███████╗██║  ██║
;  ╚═════╝╚══════╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝╚═╝  ╚═╝

(defwidget center[]
(box :class "center"
    :orientation "h"
    :halign "center"))


; ██████╗ ██╗ ██████╗ ██╗  ██╗████████╗
; ██╔══██╗██║██╔════╝ ██║  ██║╚══██╔══╝
; ██████╔╝██║██║  ███╗███████║   ██║
; ██╔══██╗██║██║   ██║██╔══██║   ██║
; ██║  ██║██║╚██████╔╝██║  ██║   ██║
; ╚═╝  ╚═╝╚═╝ ╚═════╝ ╚═╝  ╚═╝   ╚═╝

; TIME
(defpoll time_poll :interval "1s" `date +%H:%M:%S`)
(defwidget time []
    (box :orientation "h"
        :class "time"
        :halign "end"
        time_poll))

;BATTERY
(defpoll battery :interval "15s" "./scripts/battery.sh --bat")
(defpoll battery_status :interval "1m" "./scripts/battery.sh --bat-st")
(defwidget bat []
    (box :class "bat_module"
        :vexpand "false"
        :hexpand "false"
        (circular-progress
            :value battery
            :class "batbar"
            :thickness 2
        (button
            :class "iconbat"
            :limit-width 2
            :tooltip "battery on ${battery}: ${battery_status}"
            "%"))))
; MEMORY
(defpoll memory :interval "15s" "./scripts/memory.sh")
(defwidget mem []
    (box
        :class "mem_module"
        :vexpand "false"
        :hexpand "false"
        (circular-progress
            :value memory
            :class "membar"
            :thickness 2
        (button
            :class "iconmem"
            :limit-width 1
            :tooltip "Used x of y"
            "%"))))

(defwidget right[]
    (box :class "right"
        :orientation "h"
        :halign "end"
        (mem)
        (bat)
        (time)))



; ██████╗  █████╗ ██████╗ ███████╗
; ██╔══██╗██╔══██╗██╔══██╗██╔════╝
; ██████╔╝███████║██████╔╝███████╗
; ██╔══██╗██╔══██║██╔══██╗╚════██║
; ██████╔╝██║  ██║██║  ██║███████║
; ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝

(defwidget bar_1 []
    (box :class "bar_class"
        :orientation "h"
    (left)
    (center)
    (right)))

(defwindow bar0
    :monitor 0
    :geometry (geometry :x "0%"
        :y "1px"
        :width "98%"
        :height "20px"
        :anchor "bottom center")
    :stacking "fg"
    :exclusive true
    (bar_1))

(defwindow bar1
    :monitor 1
    :geometry (geometry :x "0%"
        :y "1px"
        :width "98%"
        :height "30px"
        :anchor "bottom center")
    :stacking "fg"
    :exclusive true
    (bar_1))
